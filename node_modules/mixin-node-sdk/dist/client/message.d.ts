import { AxiosInstance } from "axios";
import { AcknowledgementRequest, Keystore, MessageCategory, MessageClientRequest, MessageRequest, MessageView, ImageMessage, DataMessage, StickerMessage, ContactMesage, AppCardMessage, AudioMessage, LiveMessage, LocationMessage, VideoMessage, AppButtonMessage, RecallMessage } from "../types";
export declare class MessageClient implements MessageClientRequest {
    keystore: Keystore;
    request: AxiosInstance;
    newUUID: () => string;
    uniqueConversationID: (userID: string, recipientID: string) => string;
    sendAcknowledgements(messages: AcknowledgementRequest[]): Promise<void>;
    sendAcknowledgement(message: AcknowledgementRequest): Promise<void>;
    sendMessage(message: MessageRequest): Promise<MessageView>;
    sendMessages(messages: MessageRequest[]): Promise<undefined>;
    sendMsg(recipient_id: string, category: MessageCategory, data: any): Promise<MessageView>;
    sendMessageText(userID: string, text: string): Promise<MessageView>;
    sendMessagePost(userID: string, text: string): Promise<MessageView>;
    sendTextMsg(userID: string, text: string): Promise<MessageView>;
    sendPostMsg(userID: string, text: string): Promise<MessageView>;
    sendImageMsg(userID: string, image: ImageMessage): Promise<MessageView>;
    sendDataMsg(userID: string, data: DataMessage): Promise<MessageView>;
    sendStickerMsg(userID: string, sticker: StickerMessage): Promise<MessageView>;
    sendContactMsg(userID: string, contact: ContactMesage): Promise<MessageView>;
    sendAppCardMsg(userID: string, appCard: AppCardMessage): Promise<MessageView>;
    sendAudioMsg(userID: string, audio: AudioMessage): Promise<MessageView>;
    sendLiveMsg(userID: string, live: LiveMessage): Promise<MessageView>;
    sendVideoMsg(userID: string, video: VideoMessage): Promise<MessageView>;
    sendLocationMsg(userID: string, location: LocationMessage): Promise<MessageView>;
    sendAppButtonMsg(userID: string, appButton: AppButtonMessage[]): Promise<MessageView>;
    sendRecallMsg(userID: string, message: RecallMessage): Promise<MessageView>;
}
